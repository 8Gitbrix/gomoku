
==================== FINAL INTERFACE ====================
2017-10-08 21:14:33.825922 UTC

interface main@main:Player.GigaBot 8002
  interface hash: 1c036983c4bb4fbd5d2a8ada539c18f5
  ABI hash: a553c1fc4b6d8c552d46002b2947a2b3
  export-list hash: 7e0bfff9324c64ab4591a67d6221b25e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e397bc60a6586cf79b495f4bca34f357
  sig of: Nothing
  used TH splices: False
  where
exports:
  Player.GigaBot.playerGigaBot
module dependencies: Checks Types
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  Checks 45043d71f304e946e6d8ad579cadf002
  exports: 67c2c1a957e3dbdb15359134cee28e21
  winningMoves 4eae111df91519a97d52d8aa061b6939
import  -/  Types eaeec73556c2e2bcf8ca22ab00a50713
  exports: 2e31c236f81ee30d65781f7ce55b596d
  ?? 449d082fcb77caf26b6a93ee5ffcad44
  Board 242b0ce61f3903330f3b883851d622c0
  Move 0d3405d3da72a5980cbce361e99eda30
  Player 7ffc29fbfc3be2ec15169276e73e1051
  Player c01f365c11054d72d1b22907633ee3db
  Tile b7da88f9b458cbc8de2b41cb557c0dd9
  dim 4e4462ac7aaac753706c23a51a05ee69
  dimM e498fd4a37ed84effdf9361ae3125ac4
  dimN 03e87608c3b1e6dbcec9ed5ae6dad3fe
  validMoves 0a71f632f8fed7a1a169232f34c07bb6
4503e4e819ab2e89011b33dd29d1c81f
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Player.GigaBot.$trModule2
                   Player.GigaBot.$trModule1) -}
3928e20cbe081e3a45d4a4cd827c61b9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Player.GigaBot"#) -}
e818dd002103d2cf0bcedaaa001790de
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
1facc949a0072edcc35cd0d0a9abc3c9
  $wadjMove ::
    Types.Board -> Types.Tile -> GHC.Prim.Int# -> Types.Move
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
5741cbf2ad35cc2a145813293f3c5c80
  adjMove :: Types.Board -> Types.Tile -> GHC.Types.Int -> Types.Move
  {- Arity: 3, Strictness: <L,U><L,U><S(S),1*U(1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Types.Board) (w1 :: Types.Tile) (w2 :: GHC.Types.Int) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 Player.GigaBot.$wadjMove w w1 ww1 }) -}
c4f3d91370777a57f514e2339f05d287
  playerGigaBot :: Types.Player
  {- Strictness: m,
     Unfolding: (Types.Player
                   Player.GigaBot.playerGigaBot2
                     `cast`
                   (<Types.Tile>_R
                    ->_R <Types.Board>_R
                    ->_R Sym (GHC.Types.N:IO[0] <Types.Move>_R))
                   Player.GigaBot.playerGigaBot1) -}
304196ff7e0aa7355d2931debd8055c1
  playerGigaBot1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GigaBot"#) -}
d9b2f10a658846a8a6155ad9e2c0e09e
  playerGigaBot2 ::
    Types.Tile
    -> Types.Board
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Types.Move #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (tile :: Types.Tile)
                   (board :: Types.Board)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Checks.winningMoves board tile of wild {
                   []
                   -> (# eta,
                         Player.GigaBot.adjMove board tile Player.GigaBot.playerGigaBot3 #)
                   : h t -> (# eta, h #) }) -}
2d40eccdd4e31dd8e1468100026f7f96
  playerGigaBot3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

