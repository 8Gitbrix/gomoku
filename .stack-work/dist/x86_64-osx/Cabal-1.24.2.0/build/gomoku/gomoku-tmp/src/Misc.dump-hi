
==================== FINAL INTERFACE ====================
2017-10-07 21:21:35.841768 UTC

interface main@main:Misc 8002
  interface hash: 8ff2b20bbad077104a8ef4a648c36516
  ABI hash: 7b3f002f297d29ac2019b2470cb46de7
  export-list hash: 807fccbdbb5de9cc9fae3ac46620b62e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1cc6e58647e2430a2b08029845158a37
  sig of: Nothing
  used TH splices: False
  where
exports:
  Misc.foldM
  Misc.prompt
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO.Handle ba98a5b34d78cbf48b41fe58a3735c69
import  -/  base-4.9.1.0:GHC.IO.Handle.FD bf0291e0f2b6c0eca5446f986999f1cc
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
ab1dd2c7687880cbc1c8b14815ecfba8
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Misc.$trModule2 Misc.$trModule1) -}
5be0019184e07077d4cd9c455ec51450
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Misc"#) -}
d75ad14c9ef109d91a8d421a52d638f8
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
1fea20b01488a68c20be2448d4e37e28
  foldM :: GHC.Base.Monad m => (b -> a -> m b) -> b -> [a] -> m b
  {- Arity: 4, Strictness: <L,U(A,C(C1(U)),A,U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ (m :: * -> *)
                   @ b
                   @ a
                   ($dMonad :: GHC.Base.Monad m)
                   (eta :: b -> a -> m b)
                   (eta1 :: b)
                   (eta2 :: [a]) ->
                 Data.Foldable.foldlM
                   @ []
                   @ m
                   @ b
                   @ a
                   Data.Foldable.$fFoldable[]
                   $dMonad
                   eta
                   eta1
                   eta2) -}
a483ecdfdd2bec7b93d242563fd0facd
  prompt :: GHC.Base.String -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Misc.prompt1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
9b24fa790dd92118617d2251aa74ed26
  prompt1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: (\ (s :: GHC.Base.String)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        s
                        GHC.Types.False
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Internals.wantWritableHandle1
                        @ ()
                        GHC.IO.Handle.hFlush2
                        GHC.IO.Handle.FD.stdout
                        GHC.IO.Handle.Internals.flushWriteBuffer1
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 System.IO.getLine1 ipv2 } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

