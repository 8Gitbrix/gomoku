
==================== FINAL INTERFACE ====================
2017-10-07 21:21:35.910048 UTC

interface main@main:Player.Human 8002
  interface hash: db6c5c9a14279f7591b670d1266bd074
  ABI hash: 7a8c1b285eb0cfe8003ccf2a6fff2e22
  export-list hash: e92944ebfad0d6656bfa9917351fb1f2
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e397bc60a6586cf79b495f4bca34f357
  sig of: Nothing
  used TH splices: False
  where
exports:
  Player.Human.playerHuman
module dependencies: Misc Types
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  Misc 7b3f002f297d29ac2019b2470cb46de7
  exports: 807fccbdbb5de9cc9fae3ac46620b62e
  prompt a483ecdfdd2bec7b93d242563fd0facd
import  -/  Types eaeec73556c2e2bcf8ca22ab00a50713
  exports: 2e31c236f81ee30d65781f7ce55b596d
  Player 7ffc29fbfc3be2ec15169276e73e1051
  Player c01f365c11054d72d1b22907633ee3db
d6c01b07b4c2f283eae7e6c57eebd2db
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Player.Human.$trModule2
                   Player.Human.$trModule1) -}
a541091918041bc5162c9979f80a07a2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Player.Human"#) -}
a1ec88122816b7ba37eeb720c80cdf45
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
6e50ba3340b7e530ab43bc5aae1ba2d0
  playerHuman :: Types.Player
  {- Strictness: m,
     Unfolding: (Types.Player
                   Player.Human.playerHuman2
                     `cast`
                   (<Types.Tile>_R
                    ->_R <Types.Board>_R
                    ->_R Sym (GHC.Types.N:IO[0] <Types.Move>_R))
                   Player.Human.playerHuman1) -}
e7175a32f8d23cc40595a9082cbcf450
  playerHuman1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Human"#) -}
6f492497ebc1e482ca03b200092d7c48
  playerHuman2 ::
    Types.Tile
    -> Types.Board
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Types.Move #)
  {- Arity: 3, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Types.Tile)
                   (ds1 :: Types.Board)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Player.Human.playerHuman3 eta) -}
2c1cf98d6a79bb8ae8ad1b3e56efe4b6
  playerHuman3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Types.Move #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Misc.prompt1
                        Player.Human.playerHuman5
                        eta of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    case Text.Read.readEither6
                           @ Types.Move
                           (Text.ParserCombinators.ReadP.run
                              @ Types.Move
                              Player.Human.playerHuman4
                              ipv1) of wild {
                      []
                      -> GHC.Err.errorWithoutStackTrace
                           @ 'GHC.Types.PtrRepLifted
                           @ Types.Move
                           Text.Read.readEither4
                      : x ds1
                      -> case ds1 of wild1 {
                           [] -> x
                           : ipv2 ipv3
                           -> GHC.Err.errorWithoutStackTrace
                                @ 'GHC.Types.PtrRepLifted
                                @ Types.Move
                                Text.Read.readEither2 } } #) }) -}
9a7bfee62a5d4d404886b4677e0d177c
  playerHuman4 :: Text.ParserCombinators.ReadP.P Types.Move
  {- Unfolding: (GHC.Read.$fRead(,)2
                   @ GHC.Types.Int
                   @ GHC.Types.Int
                   GHC.Read.$fReadInt
                   GHC.Read.$fReadInt
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ Types.Move
                   (Text.Read.readEither5 @ Types.Move)) -}
d51a5d940a542b89a845760ea3b495df
  playerHuman5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Write your move! (i,j) with 1<=i,j<=3 "#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

